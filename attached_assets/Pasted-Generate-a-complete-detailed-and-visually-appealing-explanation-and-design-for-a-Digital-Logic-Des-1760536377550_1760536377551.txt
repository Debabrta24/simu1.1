Generate a complete, detailed, and visually appealing explanation and design for a Digital Logic Design Simulator that includes both theoretical circuit logic and modern UI/UX representation.
Each topic should include:

Working Principle and Logic Explanation (in paragraph form)

Truth Table and Boolean Equations

Circuit Construction and Gate Connection Details

UI and UX Design Description for interactive visualization

Responsive web layout ideas for mobile, tablet, and desktop

The project should look professional, educational, and visually clean, with a futuristic feel (soft neon glow, aligned grids, circuit animations, and labeled inputs/outputs).

🧩 Topics to Cover

1. Basic Logic Gates (AND, OR, NAND, NOR, XOR, XNOR):
Explain the working principle and Boolean logic of each gate. Provide truth tables, input-output relations, and logic equations.
Describe the circuit symbols and design layout for each gate, with interactive LED indicators for outputs.
UI Design: Inputs on left, output LED on right, with switch-style input toggles and colored light indicators (green = 1, red = 0).

2. Half Adder and Full Adder:
Show how a Half Adder is designed using AND and XOR gates, explaining its logic, truth table, and Boolean equations.
Then explain how a Full Adder is constructed using two Half Adders and an OR gate, with logic diagram and working example.
UI/UX Design: Inputs A, B, Cin on one side; Sum and Carry on the other; animated gates connecting the flow.

3. Half Subtractor and Full Subtractor:
Describe the working principle and logic equations for both circuits.
Construction: Use XOR and AND gates with inversion for Half Subtractor, and two Half Subtractors + OR gate for Full Subtractor.
UI Design: Side-by-side visualization showing difference and borrow LEDs with responsive resizing.

4. 3-to-8 Line Decoder:
Explain the design using 3 inputs and 8 outputs. Show logic equations for Y0–Y7.
Design: Basic gates implementing each output combination.
UI/UX: Grid layout of 8 LEDs for outputs; toggle switches for A2, A1, A0 inputs; one LED glows at a time.

5. 4:1 Multiplexer (MUX):
Show design using selection inputs S0, S1 and data inputs D0–D3.
Logic equation: Y = S1’S0’D0 + S1’S0D1 + S1S0’D2 + S1S0D3
UI Design: Four inputs on the left, two selector switches below, one output LED on right; highlight active data path dynamically.

6. Priority Encoder:
Explain how it assigns priority to the highest input line. Include logic table and Boolean equations.
Circuit Design: Combination of OR and AND gates with inversion logic.
UI Design: Vertical input layout (D7–D0), output display box for binary code, and a “Valid” indicator LED.

7. Comparator (1-bit and 4-bit):
Describe the logic for A=B, A>B, and A<B outputs.
Circuit Design: AND, NOR, and XOR gate combinations.
UI: Two sets of input switches (A and B) with result LEDs for “Equal,” “Greater,” and “Lesser.”

8. Composite Unit:
Design an integrated circuit combining arithmetic and logic modules (AND, OR, NOT, ADD, SUB).
Explain how control lines select between arithmetic and logic functions.
UI/UX: Mode switch (Arithmetic/Logic), dynamic gate visualization, and live result output panel.

9. Carry Look-Ahead Adder (CLA):
Describe generate (G) and propagate (P) logic, and show how CLA computes carries in parallel.
Provide Boolean formulas for C1–C4 and the block diagram.
UI Design: Interactive block layout showing input bits, P/G indicators, and carry flow animation.

10. Arithmetic Logic Unit (ALU):
Explain design of a 4-bit ALU performing arithmetic (ADD, SUB, INC, DEC) and logic (AND, OR, XOR, NOT) operations.
Include control line logic, flag generation (Carry, Zero, Overflow), and working details.
UI/UX: Toggle for operation mode, real-time output display, and LED indicators for flags; circuit centered with inputs and outputs symmetrically placed.

🧠 General UI/UX and Responsiveness Guidelines

Use responsive grid or flexbox layout.

Inputs on left, outputs on right, main circuit in center.

On smaller screens, stack input/output vertically but keep design consistent.

Add a rotation alert for mobile devices: “Please rotate your screen for the best view.” When user clicks OK, auto-adjust to landscape layout.

Apply soft shadows, rounded elements, neon effects, and color-coded signals for ON/OFF states.

The interface should be interactive, educational, and visually intuitive.